openapi: 3.0.0
info:
  title: Zipzup APIs
  description: |
    Description
  version: v1

servers:
  - url: http://zipzup.xyz

tags:
  - name: Prices
    description: APIs related to price
  - name: Query
    description: APIs related to query

paths:
  /prices/regions:
    put:
      tags:
        - Prices
      summary: Get a representative price of region
      operationId: getRegionPrice
      requestBody:
        description: Get filter to specify buildings to check representative price
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionFilter"
      responses:
        "200":
          description: A representative price of specified buildings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SortedRepresentativePrices"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/DefaultResponse"
  /notification/profile:
    get:
      summary: Query region list
      operationId: getRegions
      tags:
        - Query
      parameters:
        - $ref: '#/components/parameters/optionalDistrict1'
        - $ref: '#/components/parameters/optionalDistrict2'
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProfile'
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/DefaultResponse'


components:
  parameters:
    optionalDistrict1:
      in: query
      name: district1
      required: false
      schema:
        type: string
        description: District 1 value
    optionalDistrict2:
      in: query
      name: district2
      required: false
      schema:
        type: string
        description: District 2 value

  responses:
    BadRequest:
      description: Bad request error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: BadRequestError
                  message: The request is malformed.
              summary: A bad request response
    Unauthorized:
      description: Unauthorized error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: UnauthorizedError
                  message: Unauthorized request.
              summary: An unauthorized response
    Forbidden:
      description: Forbidden error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: ForbiddenError
                  message: Access is forbidden.
              summary: A forbidden error response
    NotFound:
      description: Not found error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: NotFoundError
                  message: A resource could not be found.
              summary: A not found error response
    Conflict:
      description: Conflict error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: ConflictError
                  message: A conflict occured that prevented action.
              summary: A conflict error response
    UnprocessableEntity:
      description: Unprocessable entity response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
              summary: A unprocessable entity error response
    TooManyRequests:
      description: Too many requests response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
              summary: A too many requests error response
    DefaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    Error:
      description: Details about the error.
      type: object
      properties:
        code:
          type: string
          description: Machine readable error code.
          example: ConstraintViolationError
        message:
          type: string
          description: Human readable error message.
          example: The request was malformed.
    ErrorResponse:
      type: object
      properties:
        requestId:
          type: string
          description: A correlation id used for reference when contacting support.
          example: 957b08cc-3e08-434a-936b-8bad3ad56895
        error:
          $ref: '#/components/schemas/Error'
    RegionFilter:
      type: object
      required:
        - function
        - district1
        - district2
      properties:
        function:
          $ref: "#/components/schemas/RepresentativeType"
        start:
          type: integer
          description: Starting date to check the price
        end:
          type: integer
          description: End date to check the price
        district1:
          type: string
          description: First district category
        district2:
          type: string
          description: Second district category
        district3:
          type: string
          description: Third district category
        district4:
          type: string
          description: Fourth district category
        builtWithIn:
          type: integer
          description: Maximum year of the building
      example:
        function: AVERAGE
        start: 201501
        end: 201912
        district1: 경기도
        district2: 수원시
        district3: 권선구
        district4: 권선동
        builtWithIn: 30
    RepresentativeType:
      type: string
      description: Function for representative value
      enum:
        - AVERAGE
        - MEDIAN
        - MAX
        - MIN
        - MODE
    SortedRepresentativePrices:
      type: object
      description: A time-sorted array of contradictions
      required:
        - prices
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/RepresentativePrice'
    RepresentativePrice:
      type: object
      description: Representative value of contradictions
      required:
        - date
      properties:
        date:
          type: string
        value:
          type: integer
