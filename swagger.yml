openapi: 3.0.0
info:
  title: Zipzup APIs
  description: |
    Description
  version: v1

servers:
  - url: http://zipzup.xyz

tags:
  - name: Prices
    description: APIs related to price
  - name: Query
    description: APIs related to query

paths:
  /prices/regions:
    put:
      tags:
        - Prices
      summary: Get a representative price of region
      operationId: getRegionPrice
      requestBody:
        description: Get filter to specify buildings to check representative price
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionFilter"
      responses:
        "200":
          description: A representative price of specified buildings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SortedRepresentativePrices"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/DefaultResponse"
  /prices/buildings:
    put:
      tags:
        - Prices
      summary: Get a representative price of buildings
      operationId: getBuildingsPrice
      requestBody:
        description: Get filter to specify buildings to check representative price
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildingsFilter"
      responses:
        "200":
          description: A representative price of specified buildings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SortedRepresentativePrices"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/DefaultResponse"
  /query/regions:
    get:
      summary: Query region list
      operationId: getRegions
      tags:
        - Query
      parameters:
        - $ref: '#/components/parameters/optionalDistrict1'
        - $ref: '#/components/parameters/optionalDistrict2'
      responses:
        '200':
          description: Query result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRegionsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /query/regions/buildings:
    get:
      summary: Query building list in the region
      operationId: getBuildingsInRegion
      tags:
        - Query
      parameters:
        - $ref: '#/components/parameters/requiredDistrict1'
        - $ref: '#/components/parameters/requiredDistrict2'
        - $ref: '#/components/parameters/optionalDistrict3'
        - $ref: '#/components/parameters/optionalDistrict4'
      responses:
        '200':
          description: Building list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBuildingsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /query/buildings:
    get:
      summary: Query building list by building name
      operationId: getBuildingsByName
      tags:
        - Query
      parameters:
        - $ref: '#/components/parameters/requiredBuildingName'
        - $ref: '#/components/parameters/optionalBuildingType'
      responses:
        '200':
          description: Building list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBuildingsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /query/buildings/{buildingId}/areas:
    get:
      summary: Query building list by building name
      operationId: getAreasByBuilding
      tags:
        - Query
      parameters:
        - $ref: '#/components/parameters/requiredBuildingId'
      responses:
        '200':
          description: Area list
          content:
            application/json:
              schema:
                type: array
                example: [ 59.9, 68.8 ]
                items:
                  type: number
                  format: float
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/DefaultResponse'

components:
  parameters:
    optionalDistrict1:
      in: query
      name: district1
      required: false
      schema:
        type: string
        description: District 1 value
    optionalDistrict2:
      in: query
      name: district2
      required: false
      schema:
        type: string
        description: District 2 value
    requiredDistrict1:
      in: query
      name: district1
      required: true
      schema:
        type: string
        description: District 1 value
    requiredDistrict2:
      in: query
      name: district2
      required: true
      schema:
        type: string
        description: District 2 value
    optionalDistrict3:
      in: query
      name: district3
      required: false
      schema:
        type: string
        description: District 3 value
    optionalDistrict4:
      in: query
      name: district4
      required: false
      schema:
        type: string
        description: District 4 value
    requiredBuildingName:
      in: query
      name: name
      required: true
      schema:
        type: string
        description: Name of building
    optionalBuildingType:
      in: query
      name: type
      required: false
      schema:
        $ref: '#/components/schemas/BuildingType'
    requiredBuildingId:
      in: path
      name: buildingId
      required: true
      schema:
        type: string
        description: ID of building

  responses:
    BadRequest:
      description: Bad request error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: BadRequestError
                  message: The request is malformed.
              summary: A bad request response
    Unauthorized:
      description: Unauthorized error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: UnauthorizedError
                  message: Unauthorized request.
              summary: An unauthorized response
    Forbidden:
      description: Forbidden error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: ForbiddenError
                  message: Access is forbidden.
              summary: A forbidden error response
    NotFound:
      description: Not found error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: NotFoundError
                  message: A resource could not be found.
              summary: A not found error response
    UnprocessableEntity:
      description: Unprocessable entity response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
              summary: A unprocessable entity error response
    TooManyRequests:
      description: Too many requests response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            objectExample:
              value:
                requestId: 957b08cc-3e08-434a-936b-8bad3ad56895
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
              summary: A too many requests error response
    DefaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    Error:
      description: Details about the error.
      type: object
      properties:
        code:
          type: string
          description: Machine readable error code.
          example: ConstraintViolationError
        message:
          type: string
          description: Human readable error message.
          example: The request was malformed.
    ErrorResponse:
      type: object
      properties:
        requestId:
          type: string
          description: A correlation id used for reference when contacting support.
          example: 957b08cc-3e08-434a-936b-8bad3ad56895
        error:
          $ref: '#/components/schemas/Error'
    RegionFilter:
      allOf:
        - $ref: '#/components/schemas/DefaultFilter'
        - type: object
          required:
            - district1
            - district2
          properties:
            district1:
              type: string
              description: First district category
            district2:
              type: string
              description: Second district category
            district3:
              type: string
              description: Third district category
            district4:
              type: string
              description: Fourth district category
            builtWithIn:
              type: integer
              description: Maximum year of the building
          example:
            district1: 경기도
            district2: 수원시
            district3: 권선구
            district4: 권선동
            builtWithIn: 30
    BuildingsFilter:
      allOf:
        - $ref: '#/components/schemas/DefaultFilter'
        - type: object
          required:
            - district1
            - district2
          properties:
            area:
              type: number
              format: float
              description: Maximum area
            buildings:
              type: array
              description: List of building ID
              example: [ 0, 1 ]
              items:
                type: number
                format: int64
          example:
            area: 59.9
            buildings: [ 0, 1 ]
    DefaultFilter:
      type: object
      required:
        - function
      properties:
        function:
          $ref: "#/components/schemas/RepresentativeType"
        start:
          type: integer
          description: Starting date to check the price
        end:
          type: integer
          description: End date to check the price
      example:
        function: AVERAGE
        start: 201501
        end: 201912
    RepresentativeType:
      type: string
      description: Function for representative value
      enum:
        - AVERAGE
        - MEDIAN
        - MAX
        - MIN
        - MODE
    SortedRepresentativePrices:
      type: object
      description: A time-sorted array of contradictions
      required:
        - prices
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/RepresentativePrice'
    RepresentativePrice:
      type: object
      description: Representative value of contradictions
      required:
        - date
      properties:
        date:
          type: string
        value:
          type: integer
    QueryRegion:
      type: object
      required:
        - district
      properties:
        district:
          type: string
          description: District name
          example: 서울특별시
        child:
          type: array
          items:
            $ref: '#/components/schemas/QueryRegion'
    QueryRegionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/QueryRegion'
    BuildingType:
      type: string
      description: Building type
      example: APT
      enum:
        - APT
    QueryBuilding:
      type: object
      required:
        - id
        - addressRoad
        - addressBunji
        - name
        - built
        - buildingType
      properties:
        id:
          type: integer
          format: int64
          description: Building ID
          example: 100
        buildingType:
          $ref: '#/components/schemas/BuildingType'
        addressRoad:
          type: string
          description: Road address
          example: 경기도 수원시 영통구 도청로 65
        addressBunji:
          type: string
          description: Bunji address
          example: 경기도 수원시 영통구 이의동 1344
        name:
          type: string
          description: Building name
          example: 자연앤힐스테이트아파트
        built:
          type: integer
          description: Built year
          example: 2015
    QueryBuildingsResponse:
      type: array
      items:
        $ref: '#/components/schemas/QueryBuilding'
